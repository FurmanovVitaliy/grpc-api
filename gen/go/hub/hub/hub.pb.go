// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.28.3
// source: hub/hub.proto

package furmanov_hub_v1_proto

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --- Common Structures ---
type Platform int32

const (
	Platform_PLATFORM_WEB     Platform = 0
	Platform_PLATFORM_WINDOWS Platform = 1
	Platform_PLATFORM_MAC     Platform = 2
	Platform_PLATFORM_LINUX   Platform = 3
	Platform_PLATFORM_IOS     Platform = 4
	Platform_PLATFORM_ANDROID Platform = 5
)

// Enum value maps for Platform.
var (
	Platform_name = map[int32]string{
		0: "PLATFORM_WEB",
		1: "PLATFORM_WINDOWS",
		2: "PLATFORM_MAC",
		3: "PLATFORM_LINUX",
		4: "PLATFORM_IOS",
		5: "PLATFORM_ANDROID",
	}
	Platform_value = map[string]int32{
		"PLATFORM_WEB":     0,
		"PLATFORM_WINDOWS": 1,
		"PLATFORM_MAC":     2,
		"PLATFORM_LINUX":   3,
		"PLATFORM_IOS":     4,
		"PLATFORM_ANDROID": 5,
	}
)

func (x Platform) Enum() *Platform {
	p := new(Platform)
	*p = x
	return p
}

func (x Platform) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Platform) Descriptor() protoreflect.EnumDescriptor {
	return file_hub_hub_proto_enumTypes[0].Descriptor()
}

func (Platform) Type() protoreflect.EnumType {
	return &file_hub_hub_proto_enumTypes[0]
}

func (x Platform) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Platform.Descriptor instead.
func (Platform) EnumDescriptor() ([]byte, []int) {
	return file_hub_hub_proto_rawDescGZIP(), []int{0}
}

type Input int32

const (
	Input_INPUT_GAMEPAD  Input = 0
	Input_INPUT_KEYBOARD Input = 1
	Input_INPUT_TOUCH    Input = 2
)

// Enum value maps for Input.
var (
	Input_name = map[int32]string{
		0: "INPUT_GAMEPAD",
		1: "INPUT_KEYBOARD",
		2: "INPUT_TOUCH",
	}
	Input_value = map[string]int32{
		"INPUT_GAMEPAD":  0,
		"INPUT_KEYBOARD": 1,
		"INPUT_TOUCH":    2,
	}
)

func (x Input) Enum() *Input {
	p := new(Input)
	*p = x
	return p
}

func (x Input) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Input) Descriptor() protoreflect.EnumDescriptor {
	return file_hub_hub_proto_enumTypes[1].Descriptor()
}

func (Input) Type() protoreflect.EnumType {
	return &file_hub_hub_proto_enumTypes[1]
}

func (x Input) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Input.Descriptor instead.
func (Input) EnumDescriptor() ([]byte, []int) {
	return file_hub_hub_proto_rawDescGZIP(), []int{1}
}

// --- Messages for HubApi ---
type GamesLibraryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GamesLibraryRequest) Reset() {
	*x = GamesLibraryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hub_hub_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GamesLibraryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamesLibraryRequest) ProtoMessage() {}

func (x *GamesLibraryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hub_hub_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamesLibraryRequest.ProtoReflect.Descriptor instead.
func (*GamesLibraryRequest) Descriptor() ([]byte, []int) {
	return file_hub_hub_proto_rawDescGZIP(), []int{0}
}

type GamesLibraryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Games []*GameInfo `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
}

func (x *GamesLibraryResponse) Reset() {
	*x = GamesLibraryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hub_hub_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GamesLibraryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamesLibraryResponse) ProtoMessage() {}

func (x *GamesLibraryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hub_hub_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamesLibraryResponse.ProtoReflect.Descriptor instead.
func (*GamesLibraryResponse) Descriptor() ([]byte, []int) {
	return file_hub_hub_proto_rawDescGZIP(), []int{1}
}

func (x *GamesLibraryResponse) GetGames() []*GameInfo {
	if x != nil {
		return x.Games
	}
	return nil
}

type GameInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GameInfoRequest) Reset() {
	*x = GameInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hub_hub_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameInfoRequest) ProtoMessage() {}

func (x *GameInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hub_hub_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameInfoRequest.ProtoReflect.Descriptor instead.
func (*GameInfoRequest) Descriptor() ([]byte, []int) {
	return file_hub_hub_proto_rawDescGZIP(), []int{2}
}

func (x *GameInfoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GameInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Game *GameInfo `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
}

func (x *GameInfoResponse) Reset() {
	*x = GameInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hub_hub_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameInfoResponse) ProtoMessage() {}

func (x *GameInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hub_hub_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameInfoResponse.ProtoReflect.Descriptor instead.
func (*GameInfoResponse) Descriptor() ([]byte, []int) {
	return file_hub_hub_proto_rawDescGZIP(), []int{3}
}

func (x *GameInfoResponse) GetGame() *GameInfo {
	if x != nil {
		return x.Game
	}
	return nil
}

type BindPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username    string     `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	PlayerEnv   *PlayerEnv `protobuf:"bytes,2,opt,name=player_env,json=playerEnv,proto3" json:"player_env,omitempty"`
	AccessToken string     `protobuf:"bytes,3,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *BindPlayerRequest) Reset() {
	*x = BindPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hub_hub_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindPlayerRequest) ProtoMessage() {}

func (x *BindPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hub_hub_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindPlayerRequest.ProtoReflect.Descriptor instead.
func (*BindPlayerRequest) Descriptor() ([]byte, []int) {
	return file_hub_hub_proto_rawDescGZIP(), []int{4}
}

func (x *BindPlayerRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *BindPlayerRequest) GetPlayerEnv() *PlayerEnv {
	if x != nil {
		return x.PlayerEnv
	}
	return nil
}

func (x *BindPlayerRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type BindPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *BindPlayerResponse) Reset() {
	*x = BindPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hub_hub_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindPlayerResponse) ProtoMessage() {}

func (x *BindPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hub_hub_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindPlayerResponse.ProtoReflect.Descriptor instead.
func (*BindPlayerResponse) Descriptor() ([]byte, []int) {
	return file_hub_hub_proto_rawDescGZIP(), []int{5}
}

func (x *BindPlayerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Represents detailed game information
type GameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Url         string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	PosterUrl   string   `protobuf:"bytes,4,opt,name=poster_url,json=posterUrl,proto3" json:"poster_url,omitempty"`
	Platform    string   `protobuf:"bytes,5,opt,name=platform,proto3" json:"platform,omitempty"`
	Rating      float32  `protobuf:"fixed32,6,opt,name=rating,proto3" json:"rating,omitempty"`
	Summary     string   `protobuf:"bytes,7,opt,name=summary,proto3" json:"summary,omitempty"`
	Trailers    []string `protobuf:"bytes,8,rep,name=trailers,proto3" json:"trailers,omitempty"`
	Screenshots []string `protobuf:"bytes,9,rep,name=screenshots,proto3" json:"screenshots,omitempty"`
	Genres      []string `protobuf:"bytes,10,rep,name=genres,proto3" json:"genres,omitempty"`
	ReleaseDate int32    `protobuf:"varint,11,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	AgeRating   string   `protobuf:"bytes,12,opt,name=age_rating,json=ageRating,proto3" json:"age_rating,omitempty"`
	Publisher   string   `protobuf:"bytes,13,opt,name=publisher,proto3" json:"publisher,omitempty"`
	Developer   string   `protobuf:"bytes,14,opt,name=developer,proto3" json:"developer,omitempty"`
}

func (x *GameInfo) Reset() {
	*x = GameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hub_hub_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameInfo) ProtoMessage() {}

func (x *GameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_hub_hub_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameInfo.ProtoReflect.Descriptor instead.
func (*GameInfo) Descriptor() ([]byte, []int) {
	return file_hub_hub_proto_rawDescGZIP(), []int{6}
}

func (x *GameInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GameInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GameInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GameInfo) GetPosterUrl() string {
	if x != nil {
		return x.PosterUrl
	}
	return ""
}

func (x *GameInfo) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *GameInfo) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *GameInfo) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *GameInfo) GetTrailers() []string {
	if x != nil {
		return x.Trailers
	}
	return nil
}

func (x *GameInfo) GetScreenshots() []string {
	if x != nil {
		return x.Screenshots
	}
	return nil
}

func (x *GameInfo) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *GameInfo) GetReleaseDate() int32 {
	if x != nil {
		return x.ReleaseDate
	}
	return 0
}

func (x *GameInfo) GetAgeRating() string {
	if x != nil {
		return x.AgeRating
	}
	return ""
}

func (x *GameInfo) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

func (x *GameInfo) GetDeveloper() string {
	if x != nil {
		return x.Developer
	}
	return ""
}

// Represents the player's environment (hardware and platform details)
type PlayerEnv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform      Platform `protobuf:"varint,1,opt,name=platform,proto3,enum=hub.Platform" json:"platform,omitempty"`
	DisplayWidth  int32    `protobuf:"varint,2,opt,name=display_width,json=displayWidth,proto3" json:"display_width,omitempty"`
	DisplayHeight int32    `protobuf:"varint,3,opt,name=display_height,json=displayHeight,proto3" json:"display_height,omitempty"`
	InputType     Input    `protobuf:"varint,4,opt,name=input_type,json=inputType,proto3,enum=hub.Input" json:"input_type,omitempty"`
	InputVendor   string   `protobuf:"bytes,5,opt,name=input_vendor,json=inputVendor,proto3" json:"input_vendor,omitempty"`
	InputProduct  string   `protobuf:"bytes,6,opt,name=input_product,json=inputProduct,proto3" json:"input_product,omitempty"`
}

func (x *PlayerEnv) Reset() {
	*x = PlayerEnv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hub_hub_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerEnv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerEnv) ProtoMessage() {}

func (x *PlayerEnv) ProtoReflect() protoreflect.Message {
	mi := &file_hub_hub_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerEnv.ProtoReflect.Descriptor instead.
func (*PlayerEnv) Descriptor() ([]byte, []int) {
	return file_hub_hub_proto_rawDescGZIP(), []int{7}
}

func (x *PlayerEnv) GetPlatform() Platform {
	if x != nil {
		return x.Platform
	}
	return Platform_PLATFORM_WEB
}

func (x *PlayerEnv) GetDisplayWidth() int32 {
	if x != nil {
		return x.DisplayWidth
	}
	return 0
}

func (x *PlayerEnv) GetDisplayHeight() int32 {
	if x != nil {
		return x.DisplayHeight
	}
	return 0
}

func (x *PlayerEnv) GetInputType() Input {
	if x != nil {
		return x.InputType
	}
	return Input_INPUT_GAMEPAD
}

func (x *PlayerEnv) GetInputVendor() string {
	if x != nil {
		return x.InputVendor
	}
	return ""
}

func (x *PlayerEnv) GetInputProduct() string {
	if x != nil {
		return x.InputProduct
	}
	return ""
}

// --- Messages for HubStation ---
// Represents system resource usage statistics
type SystemLoad struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu         float32 `protobuf:"fixed32,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory      float32 `protobuf:"fixed32,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Gpu         float32 `protobuf:"fixed32,3,opt,name=gpu,proto3" json:"gpu,omitempty"`
	Network     float32 `protobuf:"fixed32,4,opt,name=network,proto3" json:"network,omitempty"`
	PlayerSlots float32 `protobuf:"fixed32,5,opt,name=player_slots,json=playerSlots,proto3" json:"player_slots,omitempty"`
}

func (x *SystemLoad) Reset() {
	*x = SystemLoad{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hub_hub_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemLoad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemLoad) ProtoMessage() {}

func (x *SystemLoad) ProtoReflect() protoreflect.Message {
	mi := &file_hub_hub_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemLoad.ProtoReflect.Descriptor instead.
func (*SystemLoad) Descriptor() ([]byte, []int) {
	return file_hub_hub_proto_rawDescGZIP(), []int{8}
}

func (x *SystemLoad) GetCpu() float32 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *SystemLoad) GetMemory() float32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *SystemLoad) GetGpu() float32 {
	if x != nil {
		return x.Gpu
	}
	return 0
}

func (x *SystemLoad) GetNetwork() float32 {
	if x != nil {
		return x.Network
	}
	return 0
}

func (x *SystemLoad) GetPlayerSlots() float32 {
	if x != nil {
		return x.PlayerSlots
	}
	return 0
}

// Represents a list of station available games and their hash
type GamesWithHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Games     []*GameInfo `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
	GamesHash string      `protobuf:"bytes,2,opt,name=games_hash,json=gamesHash,proto3" json:"games_hash,omitempty"`
}

func (x *GamesWithHash) Reset() {
	*x = GamesWithHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hub_hub_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GamesWithHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamesWithHash) ProtoMessage() {}

func (x *GamesWithHash) ProtoReflect() protoreflect.Message {
	mi := &file_hub_hub_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamesWithHash.ProtoReflect.Descriptor instead.
func (*GamesWithHash) Descriptor() ([]byte, []int) {
	return file_hub_hub_proto_rawDescGZIP(), []int{9}
}

func (x *GamesWithHash) GetGames() []*GameInfo {
	if x != nil {
		return x.Games
	}
	return nil
}

func (x *GamesWithHash) GetGamesHash() string {
	if x != nil {
		return x.GamesHash
	}
	return ""
}

// Represents geographical data of a station
type GeoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country   string  `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	Region    string  `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	City      string  `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	Latitude  float32 `protobuf:"fixed32,4,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float32 `protobuf:"fixed32,5,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Timezone  string  `protobuf:"bytes,6,opt,name=timezone,proto3" json:"timezone,omitempty"`
}

func (x *GeoData) Reset() {
	*x = GeoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hub_hub_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoData) ProtoMessage() {}

func (x *GeoData) ProtoReflect() protoreflect.Message {
	mi := &file_hub_hub_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoData.ProtoReflect.Descriptor instead.
func (*GeoData) Descriptor() ([]byte, []int) {
	return file_hub_hub_proto_rawDescGZIP(), []int{10}
}

func (x *GeoData) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *GeoData) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *GeoData) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *GeoData) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GeoData) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *GeoData) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

// Represents a gaming station
type Station struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ip      string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port    int32    `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	GeoData *GeoData `protobuf:"bytes,4,opt,name=geo_data,json=geoData,proto3" json:"geo_data,omitempty"`
}

func (x *Station) Reset() {
	*x = Station{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hub_hub_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Station) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Station) ProtoMessage() {}

func (x *Station) ProtoReflect() protoreflect.Message {
	mi := &file_hub_hub_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Station.ProtoReflect.Descriptor instead.
func (*Station) Descriptor() ([]byte, []int) {
	return file_hub_hub_proto_rawDescGZIP(), []int{11}
}

func (x *Station) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Station) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Station) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Station) GetGeoData() *GeoData {
	if x != nil {
		return x.GeoData
	}
	return nil
}

// Represents a command message sent to a station
type CommandMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId  string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Command string   `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Args    []string `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
}

func (x *CommandMessage) Reset() {
	*x = CommandMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hub_hub_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandMessage) ProtoMessage() {}

func (x *CommandMessage) ProtoReflect() protoreflect.Message {
	mi := &file_hub_hub_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandMessage.ProtoReflect.Descriptor instead.
func (*CommandMessage) Descriptor() ([]byte, []int) {
	return file_hub_hub_proto_rawDescGZIP(), []int{12}
}

func (x *CommandMessage) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *CommandMessage) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *CommandMessage) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

// Represents messages exchanged between Hub and Stations
type ExchangeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StationId string `protobuf:"bytes,1,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*ExchangeMessage_Connect
	//	*ExchangeMessage_Games
	//	*ExchangeMessage_Load
	//	*ExchangeMessage_Command
	Payload isExchangeMessage_Payload `protobuf_oneof:"payload"`
}

func (x *ExchangeMessage) Reset() {
	*x = ExchangeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hub_hub_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeMessage) ProtoMessage() {}

func (x *ExchangeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_hub_hub_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeMessage.ProtoReflect.Descriptor instead.
func (*ExchangeMessage) Descriptor() ([]byte, []int) {
	return file_hub_hub_proto_rawDescGZIP(), []int{13}
}

func (x *ExchangeMessage) GetStationId() string {
	if x != nil {
		return x.StationId
	}
	return ""
}

func (m *ExchangeMessage) GetPayload() isExchangeMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *ExchangeMessage) GetConnect() *Station {
	if x, ok := x.GetPayload().(*ExchangeMessage_Connect); ok {
		return x.Connect
	}
	return nil
}

func (x *ExchangeMessage) GetGames() *GamesWithHash {
	if x, ok := x.GetPayload().(*ExchangeMessage_Games); ok {
		return x.Games
	}
	return nil
}

func (x *ExchangeMessage) GetLoad() *SystemLoad {
	if x, ok := x.GetPayload().(*ExchangeMessage_Load); ok {
		return x.Load
	}
	return nil
}

func (x *ExchangeMessage) GetCommand() *CommandMessage {
	if x, ok := x.GetPayload().(*ExchangeMessage_Command); ok {
		return x.Command
	}
	return nil
}

type isExchangeMessage_Payload interface {
	isExchangeMessage_Payload()
}

type ExchangeMessage_Connect struct {
	Connect *Station `protobuf:"bytes,2,opt,name=connect,proto3,oneof"`
}

type ExchangeMessage_Games struct {
	Games *GamesWithHash `protobuf:"bytes,3,opt,name=games,proto3,oneof"`
}

type ExchangeMessage_Load struct {
	Load *SystemLoad `protobuf:"bytes,4,opt,name=load,proto3,oneof"`
}

type ExchangeMessage_Command struct {
	Command *CommandMessage `protobuf:"bytes,5,opt,name=command,proto3,oneof"`
}

func (*ExchangeMessage_Connect) isExchangeMessage_Payload() {}

func (*ExchangeMessage_Games) isExchangeMessage_Payload() {}

func (*ExchangeMessage_Load) isExchangeMessage_Payload() {}

func (*ExchangeMessage_Command) isExchangeMessage_Payload() {}

var File_hub_hub_proto protoreflect.FileDescriptor

var file_hub_hub_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x68, 0x75, 0x62, 0x2f, 0x68, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x68, 0x75, 0x62, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x15, 0x0a, 0x13, 0x47,
	0x61, 0x6d, 0x65, 0x73, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x3b, 0x0a, 0x14, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x4c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x67, 0x61,
	0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x68, 0x75, 0x62, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x22,
	0x2b, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x10,
	0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x21, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x68, 0x75, 0x62, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x67,
	0x61, 0x6d, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x11, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xfa, 0x42, 0x17,
	0x72, 0x15, 0x10, 0x03, 0x18, 0x32, 0x32, 0x0f, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a,
	0x30, 0x2d, 0x39, 0x5f, 0x5d, 0x2b, 0x24, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x76, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x45, 0x6e, 0x76, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x6e, 0x76,
	0x12, 0x2a, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2e, 0x0a, 0x12,
	0x42, 0x69, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xdc, 0x03, 0x0a,
	0x08, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0a, 0x70,
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72,
	0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x21, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x0c, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0a, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x09, 0x61, 0x67, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x0a,
	0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x09, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x22, 0xf5, 0x01, 0x0a, 0x09,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x68, 0x75,
	0x62, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x29, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x23,
	0x0a, 0x0d, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x6f,
	0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x67, 0x70, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x67, 0x70, 0x75, 0x12, 0x18,
	0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0x53, 0x0a, 0x0d, 0x47,
	0x61, 0x6d, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x48, 0x61, 0x73, 0x68, 0x12, 0x23, 0x0a, 0x05,
	0x67, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x68, 0x75,
	0x62, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x61, 0x6d, 0x65,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x48, 0x61, 0x73, 0x68,
	0x22, 0xa5, 0x01, 0x0a, 0x07, 0x47, 0x65, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0x66, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x27, 0x0a, 0x08, 0x67, 0x65, 0x6f, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x68, 0x75, 0x62, 0x2e,
	0x47, 0x65, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x67, 0x65, 0x6f, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x57, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0xe9, 0x01, 0x0a, 0x0f, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x68, 0x75, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x73, 0x57, 0x69, 0x74, 0x68, 0x48, 0x61, 0x73, 0x68, 0x48, 0x00, 0x52, 0x05, 0x67, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x61,
	0x64, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x75, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2a, 0x80, 0x01, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x57,
	0x45, 0x42, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d,
	0x5f, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x4c,
	0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x4d, 0x41, 0x43, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e,
	0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x4c, 0x49, 0x4e, 0x55, 0x58, 0x10, 0x03,
	0x12, 0x10, 0x0a, 0x0c, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x49, 0x4f, 0x53,
	0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x41,
	0x4e, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x10, 0x05, 0x2a, 0x3f, 0x0a, 0x05, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x50,
	0x41, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x4b, 0x45,
	0x59, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x50, 0x55,
	0x54, 0x5f, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x10, 0x02, 0x32, 0xa5, 0x01, 0x0a, 0x04, 0x47, 0x61,
	0x6d, 0x65, 0x12, 0x53, 0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x4c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x12, 0x18, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x4c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x68,
	0x75, 0x62, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x08, 0x12,
	0x06, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x32, 0x63, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x56,
	0x0a, 0x0a, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x68,
	0x75, 0x62, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0c, 0x2f, 0x62, 0x69, 0x6e, 0x64, 0x2d, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x32, 0x4e, 0x0a, 0x0a, 0x48, 0x75, 0x62, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x14, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x14, 0x2e, 0x68,
	0x75, 0x62, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x17, 0x5a, 0x15, 0x66, 0x75, 0x72, 0x6d, 0x61, 0x6e,
	0x6f, 0x76, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hub_hub_proto_rawDescOnce sync.Once
	file_hub_hub_proto_rawDescData = file_hub_hub_proto_rawDesc
)

func file_hub_hub_proto_rawDescGZIP() []byte {
	file_hub_hub_proto_rawDescOnce.Do(func() {
		file_hub_hub_proto_rawDescData = protoimpl.X.CompressGZIP(file_hub_hub_proto_rawDescData)
	})
	return file_hub_hub_proto_rawDescData
}

var file_hub_hub_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_hub_hub_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_hub_hub_proto_goTypes = []interface{}{
	(Platform)(0),                // 0: hub.Platform
	(Input)(0),                   // 1: hub.Input
	(*GamesLibraryRequest)(nil),  // 2: hub.GamesLibraryRequest
	(*GamesLibraryResponse)(nil), // 3: hub.GamesLibraryResponse
	(*GameInfoRequest)(nil),      // 4: hub.GameInfoRequest
	(*GameInfoResponse)(nil),     // 5: hub.GameInfoResponse
	(*BindPlayerRequest)(nil),    // 6: hub.BindPlayerRequest
	(*BindPlayerResponse)(nil),   // 7: hub.BindPlayerResponse
	(*GameInfo)(nil),             // 8: hub.GameInfo
	(*PlayerEnv)(nil),            // 9: hub.PlayerEnv
	(*SystemLoad)(nil),           // 10: hub.SystemLoad
	(*GamesWithHash)(nil),        // 11: hub.GamesWithHash
	(*GeoData)(nil),              // 12: hub.GeoData
	(*Station)(nil),              // 13: hub.Station
	(*CommandMessage)(nil),       // 14: hub.CommandMessage
	(*ExchangeMessage)(nil),      // 15: hub.ExchangeMessage
}
var file_hub_hub_proto_depIdxs = []int32{
	8,  // 0: hub.GamesLibraryResponse.games:type_name -> hub.GameInfo
	8,  // 1: hub.GameInfoResponse.game:type_name -> hub.GameInfo
	9,  // 2: hub.BindPlayerRequest.player_env:type_name -> hub.PlayerEnv
	0,  // 3: hub.PlayerEnv.platform:type_name -> hub.Platform
	1,  // 4: hub.PlayerEnv.input_type:type_name -> hub.Input
	8,  // 5: hub.GamesWithHash.games:type_name -> hub.GameInfo
	12, // 6: hub.Station.geo_data:type_name -> hub.GeoData
	13, // 7: hub.ExchangeMessage.connect:type_name -> hub.Station
	11, // 8: hub.ExchangeMessage.games:type_name -> hub.GamesWithHash
	10, // 9: hub.ExchangeMessage.load:type_name -> hub.SystemLoad
	14, // 10: hub.ExchangeMessage.command:type_name -> hub.CommandMessage
	2,  // 11: hub.Game.GamesLibrary:input_type -> hub.GamesLibraryRequest
	4,  // 12: hub.Game.Game:input_type -> hub.GameInfoRequest
	6,  // 13: hub.Signaling.BindPlayer:input_type -> hub.BindPlayerRequest
	15, // 14: hub.HubStation.ExchangeStream:input_type -> hub.ExchangeMessage
	3,  // 15: hub.Game.GamesLibrary:output_type -> hub.GamesLibraryResponse
	5,  // 16: hub.Game.Game:output_type -> hub.GameInfoResponse
	7,  // 17: hub.Signaling.BindPlayer:output_type -> hub.BindPlayerResponse
	15, // 18: hub.HubStation.ExchangeStream:output_type -> hub.ExchangeMessage
	15, // [15:19] is the sub-list for method output_type
	11, // [11:15] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_hub_hub_proto_init() }
func file_hub_hub_proto_init() {
	if File_hub_hub_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hub_hub_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GamesLibraryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hub_hub_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GamesLibraryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hub_hub_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hub_hub_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hub_hub_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hub_hub_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hub_hub_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hub_hub_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerEnv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hub_hub_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemLoad); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hub_hub_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GamesWithHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hub_hub_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hub_hub_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Station); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hub_hub_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hub_hub_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_hub_hub_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*ExchangeMessage_Connect)(nil),
		(*ExchangeMessage_Games)(nil),
		(*ExchangeMessage_Load)(nil),
		(*ExchangeMessage_Command)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hub_hub_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_hub_hub_proto_goTypes,
		DependencyIndexes: file_hub_hub_proto_depIdxs,
		EnumInfos:         file_hub_hub_proto_enumTypes,
		MessageInfos:      file_hub_hub_proto_msgTypes,
	}.Build()
	File_hub_hub_proto = out.File
	file_hub_hub_proto_rawDesc = nil
	file_hub_hub_proto_goTypes = nil
	file_hub_hub_proto_depIdxs = nil
}
